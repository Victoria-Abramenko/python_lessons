# # # ______  Задание 163  ______
# # На вход программе подаются целые числа, записанные через пробел. Необходимо их прочитать и с помощью list
# # comprehension сформировать двумерный список lst размером N x N (квадратную таблицу чисел). Гарантируется, что из набора
# # введенных чисел можно сформировать квадратную матрицу (таблицу). Полученный двумерный список отобразить командой:
# # print(lst)
# numbers = list(map(int, input().split()))  # 1 2 3 4 5 6 7 8 9
# n = int(len(numbers) ** 0.5)
# lst = [numbers[i * n: i * n + n] for i in range(n)]
# print(lst)

# # другое интересное решение
# numbers = list(map(int, input().split()))  # 1 2 3 4 5 6 7 8 9
# n = int(len(numbers) ** 0.5)
# it = iter(numbers)
# lst = [[next(it) for j in range(n)] for i in range(n)]
# print(lst)

# # # ______  Задание 164  ______
# Объявите в программе следующий список из строк:
# t = ["– Скажи-ка, дядя, ведь не даром",
#     "Я Python выучил с каналом",
#     "Балакирев что раздавал?",
#     "Ведь были ж заданья боевые,",
#     "Да, говорят, еще какие!",
#     "Недаром помнит вся Россия",
#     "Как мы рубили их тогда!"
#     ]
# Необходимо преобразовать его в двумерный (вложенный) список lst, где каждая строка представляется списком из слов
# (слова разделяются пробелом), но сохранять слова только длиной более трех символов. Решить данную задачу следует с
# использованием list comprehension. Результат отобразить с помощью команды:
# print(lst)
# То есть, на выходе список должен быть:
# [['Скажи-ка,', 'дядя,', 'ведь', 'даром'], ...]
t = ["– Скажи-ка, дядя, ведь не даром",
    "Я Python выучил с каналом",
    "Балакирев что раздавал?",
    "Ведь были ж заданья боевые,",
    "Да, говорят, еще какие!",
    "Недаром помнит вся Россия",
    "Как мы рубили их тогда!"
    ]
